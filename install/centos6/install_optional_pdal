# This instructions are to install PDAL in Centos 6.6
# They must be executed after installing the install_required, 
install_optional_postgres, install_optional_postgis_pointcloud 
and install_optional_oracle

# To install latest PDAL we need a G++ compiler with support for C++11 features.
yum -y install glibc-devel.i686 glibc-devel
cd /opt/sw
wget ftp://ftp.nluug.nl/mirror/languages/gcc/releases/gcc-4.8.4/gcc-4.8.4.tar.gz
tar xzf gcc-4.8.4.tar.gz
cd gcc-4.8.4
./contrib/download_prerequisites
cd ..
mkdir gcc-4.8.4-makefiles
cd gcc-4.8.4-makefiles
../gcc-4.8.4/configure --prefix=/opt/sw/gcc-4.8.4-build
make
make install
# Add paths to export_paths.sh 
# export LD_LIBRARY_PATH="/opt/sw/gcc-4.8.4-build/lib:$LD_LIBRARY_PATH"
# export LD_LIBRARY_PATH="/opt/sw/gcc-4.8.4-build/lib64:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/gcc-4.8.4-build/bin:$PATH"
# export CPATH="/opt/sw/gcc-4.8.4-build/include:$CPATH"

source /opt/sw/export_paths.sh
cd /opt/sw/
git clone https://github.com/PDAL/PDAL.git PDAL-trunk
cd PDAL-trunk
mkdir build
mkdir makefiles
cd makefiles
# Remove Oracle or PostgreSQL options if they are not installed
cmake .. -DCMAKE_INSTALL_PREFIX=/opt/sw/PDAL-trunk/build -DCMAKE_BUILD_TYPE=Release \
-DWITH_APPS=ON -DWITH_GEOTIFF=ON \
-DWITH_LASZIP=ON \
-DWITH_TESTS=ON \
-DGDAL_CONFIG=/opt/sw/gdal-trunk/build/bin/gdal-config \
-DGDAL_INCLUDE_DIR=/opt/sw/gdal-trunk/build/include \
-DGDAL_LIBRARY=/opt/sw/gdal-trunk/build/lib/libgdal.so \
-DGEOTIFF_INCLUDE_DIR=/opt/sw/libgeotiff-1.4.1/build/include \
-DGEOTIFF_LIBRARY=/opt/sw/libgeotiff-1.4.1/build/lib/libgeotiff.so \
-DLASZIP_INCLUDE_DIR=/opt/sw/laszip-2.1.0/build/include \
-DLASZIP_LIBRARY=/opt/sw/laszip-2.1.0/build/lib/liblaszip.so \
-DPG_CONFIG=/usr/pgsql-9.4/bin/pg_config \
-DPOSTGRESQL_INCLUDE_DIR=/usr/pgsql-9.4/include \
-DPOSTGRESQL_LIBRARIES=/usr/pgsql-9.4/lib/libpq.so \
-DBoost_FILESYSTEM_LIBRARY=/opt/sw/boost_1_55_0/build/lib/libboost_filesystem.so \
-DBoost_FILESYSTEM_LIBRARY_DEBUG=/opt/sw/boost_1_55_0/build/lib/libboost_filesystem.so \
-DBoost_FILESYSTEM_LIBRARY_RELEASE=/opt/sw/boost_1_55_0/build/lib/libboost_filesystem.so \
-DBoost_INCLUDE_DIR=/opt/sw/boost_1_55_0/build/include \
-DBoost_IOSTREAMS_LIBRARY=/opt/sw/boost_1_55_0/build/lib/libboost_iostreams.so \
-DBoost_IOSTREAMS_LIBRARY_DEBUG=/opt/sw/boost_1_55_0/build/lib/libboost_iostreams.so \
-DBoost_IOSTREAMS_LIBRARY_RELEASE=/opt/sw/boost_1_55_0/build/lib/libboost_iostreams.so \
-DBoost_LIBRARY_DIRS=/opt/sw/boost_1_55_0/build/lib \
-DBoost_PROGRAM_OPTIONS_LIBRARY=/opt/sw/boost_1_55_0/build/lib/libboost_program_options.so \
-DBoost_PROGRAM_OPTIONS_LIBRARY_RELEASE=/opt/sw/boost_1_55_0/build/lib/libboost_program_options.so \
-DBoost_PROGRAM_OPTIONS_LIBRARY_DEBUG=/opt/sw/boost_1_55_0/build/lib/libboost_program_options.so \
-DBoost_SYSTEM_LIBRARY=/opt/sw/boost_1_55_0/build/lib/libboost_system.so \
-DBoost_SYSTEM_LIBRARY_DEBUG=/opt/sw/boost_1_55_0/build/lib/libboost_system.so \
-DBoost_SYSTEM_LIBRARY_RELEASE=/opt/sw/boost_1_55_0/build/lib/libboost_system.so \
-DCMAKE_CXX_FLAGS="-std=c++11" -DBUILD_PLUGIN_PGPOINTCLOUD=ON -DBUILD_PLUGIN_OCI=ON
make
make install
# Add paths to export_custom.sh
# export LD_LIBRARY_PATH="/opt/sw/PDAL-trunk/build/lib:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/PDAL-trunk/build/bin:$PATH"
# export CPATH="/opt/sw/PDAL-trunk/build/include:$CPATH"
