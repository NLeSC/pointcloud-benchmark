# Most of these instructions are inspired from
# http://scigeo.org/articles/howto-install-latest-geospatial-software-on-linux.html
************************************************************************************
yum update

# Install GNOME desktop and X window system
yum -y groupinstall "Desktop" "Desktop Platform" "X Window System" "Fonts"
yum install kernel-headers kernel-devel
yum groupinstall "Development Tools"

yum install wget cmake28 make CUnit-devel autoconf automake gcc cpp gcc-c++ \
python-devel swig sudo yum install libjpeg-turbo-devel bzip2-devel zlib-devel \
git libxml2-devel numpy flann flann-devel sqlite sqlite-devel


# Install geos
wget http://download.osgeo.org/geos/geos-3.4.2.tar.bz2
tar xjf geos-3.4.2.tar.bz2 
cd geos-3.4.2
mkdir build
mkdir makefiles
cd makefiles
../configure --prefix=/opt/sw/geos-3.4.2/build --enable-python
make 
make install
cd /opt/sw
# Add paths to export_custom.sh
# export LD_LIBRARY_PATH="/opt/sw/geos-3.4.2/build/lib:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/geos-3.4.2/build/bin:$PATH"


# Install proj
source export_custom.sh
wget http://download.osgeo.org/proj/proj-4.9.0RC2.tar.gz
tar xvzf proj-4.9.0RC2.tar.gz 
cd proj-4.9.0
mkdir build
mkdir makefiles
cd makefiles
../configure --prefix=/opt/sw/proj-4.9.0/build
make
make install
cd /opt/sw/
# Add paths to export_custom.sh 
# export LD_LIBRARY_PATH="/opt/sw/proj-4.9.0/build/lib:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/proj-4.9.0/build/bin:$PATH"

# Install libtiff
source export_custom.sh 
wget http://download.osgeo.org/libtiff/tiff-4.0.3.tar.gz
tar xvzf tiff-4.0.3.tar.gz 
cd tiff-4.0.3
# build already exists
mkdir makefiles
cd makefiles/
../configure --prefix=/opt/sw/tiff-4.0.3/build --exec-prefix=/opt/sw/tiff-4.0.3/build/
make
make install
cd /opt/sw/
# Add paths to export_custom.sh 
# export LD_LIBRARY_PATH="/opt/sw/tiff-4.0.3/build/lib:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/tiff-4.0.3/build/bin:$PATH"

# Install Boost  
# IMPORTANT: PDAL requires version 1.55 and not higher!. PDAL did not compile with Boost 1.57 
source export_custom.sh 
wget http://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2
tar xvjf boost_1_55_0.tar.bz2 
cd boost_1_55_0
mkdir build
./bootstrap.sh --prefix=/opt/sw/boost_1_55_0/build
./b2 -j2 stage threading=multi  --layout=tagged link=shared
./b2 install
cd /opt/sw/
# Add paths to export_custom.sh 
# export LD_LIBRARY_PATH="/opt/sw/boost_1_55_0/build/lib:$LD_LIBRARY_PATH"

# Install libgeotiff
source export_custom.sh 
wget wget http://download.osgeo.org/geotiff/libgeotiff/libgeotiff-1.4.1.tar.gz
tar xvzf libgeotiff-1.4.1.tar.gz 
cd libgeotiff-1.4.1
mkdir build
./configure --prefix=/opt/sw/libgeotiff-1.4.1/build --with-proj=/opt/sw/proj-4.9.0/build --with-libtiff=/opt/sw/tiff-4.0.3/build --with-zlib --with-jpeg
make
make install
cd /opt/sw/
# Add paths to export_custom.sh 
# export LD_LIBRARY_PATH="/opt/sw/libgeotiff-1.4.1/build/lib:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/libgeotiff-1.4.1/build/bin:$PATH"

#### IMPORTANT ####
# If the system is going to use PostgreSQL, this is the moment to install it (only PostgreSQL, not PostGIS)
# If the system is going to use Oracle, this is the moment to install it.

# Install GDAL
 yum install subversion expat-devel libcurl-devel
 yum install xerces-c-devel unixODBC-devel
 source export_custom.sh 
svn checkout https://svn.osgeo.org/gdal/trunk/gdal gdal-trunk
cd gdal-trunk/
mkdir build
# Remove pg_config if no PostgreSQL is required
# Remove with-oci if no Oracle is required
export CC="gcc -fPIC"
export CXX="g++ -fPIC"
./configure --prefix=/opt/sw/gdal-trunk/build/ --with-jpeg=external --with-jpeg12 --without-libtool --without-python --with-static-proj4=/opt/sw/proj-4.9.0/build/ --with-libtiff=/opt/sw/tiff-4.0.3/build/ --with-geotiff=/opt/sw/libgeotiff-1.4.1/build/ --with-geos=/opt/sw/geos-3.4.2/build/bin/geos-config --with-pg=/usr/pgsql-9.4/bin/pg_config  --with-oci=yes
make -j2
make install
cd /opt/sw/
# Add paths to export_custom.sh 
# export LD_LIBRARY_PATH="/opt/sw/gdal-trunk/build/lib:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/gdal-trunk/build/bin:$PATH"
source export_custom.sh 
mkdir -p /opt/sw/gdal-trunk/build/lib64/python2.6/site-packages
export PYTHONPATH="$PYTHONPATH:/opt/sw/gdal-trunk/build/lib64/python2.6/site-packages"
cd gdal-trunk/swig/
make 
cd python/
python setup.py install --prefix=/opt/sw/gdal-trunk/build/
cd /opt/sw/
# Add paths to export_custom.sh 
# export PATH="/opt/sw/gdal-trunk/swig/python/scripts:$PATH"
# export PYTHONPATH="$PYTHONPATH:/opt/sw/gdal-trunk/build/lib64/python2.6/site-packages"


# Install laszip
source export_custom.sh 
install git cmake gcc-c++ make
wget http://download.A.org/laszip/laszip-2.1.0.tar.gz
tar xvzf laszip-2.1.0.tar.gz 
cd laszip-2.1.0
mkdir build
mkdir makefiles
cd makefiles/
cmake .. -DCMAKE_INSTALL_PREFIX=/opt/sw/laszip-2.1.0/build/
make
make install
cd /opt/sw/
# Add paths to export_custom.sh 
# export LD_LIBRARY_PATH="/opt/sw/laszip-2.1.0/build/lib:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/laszip-2.1.0/build/bin:$PATH"

# Install liblas (if you want it for Oracle you may need extra steps. Look at liblas compilation web page)
source export_custom.sh 
git clone git://github.com/libLAS/libLAS.git liblas
cd liblas/
mkdir makefiles
mkdir build
# The FindPROJ4.cmake is missing. It has to be put in /opt/sw/liblas/cmake/modules
# Use file in this directory
cd makefiles/
cmake -G "Unix Makefiles" .. -DCMAKE_INSTALL_PREFIX=/opt/sw/liblas/build \
-DWITH_GDAL=ON  -DWITH_GEOTIFF=ON -DWITH_LASZIP=ON -DWITH_PKGCONFIG=ON -DWITH_TESTS=ON \
-DGDAL_CONFIG=/opt/sw/gdal-trunk/build/bin/gdal-config \
-DGDAL_INCLUDE_DIR=/opt/sw/gdal-trunk/build/include \
-DGDAL_LIBRARY=/opt/sw/gdal-trunk/build/lib/libgdal.so \
-DGEOTIFF_INCLUDE_DIR=/opt/sw/libgeotiff-1.4.1/build/include \
-DGEOTIFF_LIBRARY=/opt/sw/libgeotiff-1.4.1/build/lib/libgeotiff.so \
-DLASZIP_INCLUDE_DIR=/opt/sw/laszip-2.1.0/build/include \
-DLASZIP_LIBRARY=/opt/sw/laszip-2.1.0/build/lib/liblaszip.so \
-DBOOST_LIBRARY_DIRS=/opt/sw/boost_1_55_0/build/lib \
-DBOOST_INCLUDEDIR=/opt/sw/boost_1_55_0/build/include \
-DBOOST_PROGRAM_OPTIONS_LIBRARY=/opt/sw/boost_1_55_0/build/lib/libboost_program_options.so \
-DBOOST_PROGRAM_OPTIONS_LIBRARY_DEBUG=/opt/sw/boost_1_55_0/build/lib/libboost_program_options.so \
-DBOOST_PROGRAM_OPTIONS_LIBRARY_RELEASE=/opt/sw/boost_1_55_0/build/lib/libboost_program_options.so \
-DBOOST_THREAD_LIBRARY=/opt/sw/boost_1_55_0/build/lib/libboost_thread.so \
-DBOOST_THREAD_LIBRARY_DEBUG=/opt/sw/boost_1_55_0/build/lib/libboost_thread.so \
-DBOOST_THREAD_LIBRARY_RELEASE=/opt/sw/boost_1_55_0/build/lib/libboost_thread.so \
-DTIFF_INCLUDE_DIR=/opt/sw/tiff-4.0.3/build/include \
-DTIFF_LIBRARY=/opt/sw/tiff-4.0.3/build/lib/libtiff.so \
-DPROJ4_LIBRARY=/opt/sw/proj-4.9.0/build/lib/libproj.so \
-DPROJ4_INCLUDE_DIR=/opt/sw/proj-4.9.0/build/include
make
make install
cd /opt/sw/
# Add paths to export_custom.sh 
source export_custom.sh 
cd liblas/python/
mkdir -p /opt/sw/liblas/build/lib/python2.6/site-packages
export PYTHONPATH="$PYTHONPATH:/opt/sw/liblas/build/lib/python2.6/site-packages"
python setup.py install --prefix=/opt/sw/liblas/build
cd /opt/sw/
# Add paths to export_custom.sh
# export LD_LIBRARY_PATH="/opt/sw/liblas/build/lib:$LD_LIBRARY_PATH"
# export PATH="/opt/sw/liblas/build/bin:$PATH"
# export CPATH="/opt/sw/liblas/build/include:$CPATH"
# export PYTHONPATH="$PYTHONPATH:/opt/sw/liblas/build/lib/python2.6/site-packages" 
source export_custom.sh

# Install LAStools (open-source part, i.e. no wine is required)
cd /opt/sw
wget http://www.cs.unc.edu/~isenburg/lastools/download/lastools.zip
unzip lastools.zip
cd lastools
make -j$threads
# Binaries will be found in the 'bin' directory. 
# Recommended not to run 'make install' because most of lastools' executables have the same names as the liblas utilities. 
# Add paths to export_custom.sh
# export PATH="/opt/sw/lastools/bin:$PATH"


# Python modules for the benchmark platform
# EPEL is required
yum install http://mirror.its.dal.ca/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
# Check that the main repository is enabled in /etc/yum.repos.d/epel.repo (should say enabled=1 under the first, base package).

yum install python-devel freetype freetype-devel libxml2 libxml2-devel libxslt \
libxslt-devel libpng-devel python-pip python-psycopg2 python-matplotlib

pip install --upgrade setuptools
# This may give problems, in that case install from:
wget https://bootstrap.pypa.io/ez_setup.py -O - | python

#Requirements:
pip install lxml
pip install psutil
pip install numpy --upgrade 

# Add python/pointcloud directory to pythonpath
# export PYTHONPATH="$PYTHONPATH:/opt/sw/pointcloud-benchmark/python/pointcloud" 